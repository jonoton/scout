# Scout Docker Image
# Build:
#   docker build --build-arg UID=$(id -u) --build-arg GID=$(id -g) -f Dockerfile.arm64 -t scout:arm64 .
# Run in foreground and remove after:
#   docker run -it --rm -p 8080:8080 -v HOST_DATA_PATH:/scout/data -v HOST_CONFIG_PATH:/scout/.config -v HOST_LOGS_PATH:/scout/.logs scout:arm64
# Run in background and keep:
#   docker run -d -p 8080:8080 -v HOST_DATA_PATH:/scout/data -v HOST_CONFIG_PATH:/scout/.config -v HOST_LOGS_PATH:/scout/.logs scout:arm64
# Keep Host Date Time Localization
#   Add to the lines above: -v /etc/localtime:/etc/localtime:ro


# GoCV
FROM ubuntu:18.04 AS gocv-arm64
LABEL maintainer="jonotoninnovation"
ENV DEBIAN_FRONTEND="noninteractive"
ENV TZ="America/New_York"
RUN apt update && apt install -y sudo git wget build-essential
RUN apt purge -y golang
RUN mkdir /Downloads
RUN wget -c https://golang.org/dl/go1.15.8.linux-arm64.tar.gz -O - | tar -xz -C /Downloads
ENV GOROOT="/Downloads/go"
ENV PATH=$PATH:$GOROOT/bin
RUN which go && go version
ENV GOPATH=/go
ENV GO111MODULE=on
RUN mkdir -p "$GOPATH/src"
WORKDIR /go/src
RUN go get -d gocv.io/x/gocv@v0.27.0
RUN cd $GOPATH/pkg/mod/gocv.io/x/gocv@v0.27.0 && make -j install; exit 0
RUN cd $GOPATH/pkg/mod/gocv.io/x/gocv@v0.27.0 && go install -v .


# Scout
FROM gocv-arm64 AS scout-arm64
LABEL maintainer="jonotoninnovation"
ARG UNAME=user
ARG UID=1000
ARG GID=1000
RUN groupadd -g $GID -o $UNAME
RUN useradd -m -u $UID -g $GID -o -s /bin/bash $UNAME
RUN mkdir /scout && chown $UID:$GID /scout
WORKDIR /go/src/github.com/jonoton/scout
COPY . .
RUN chown -R $UID:$GID /go
USER $UNAME
RUN mkdir -p /scout/data && mkdir -p /scout/.config && mkdir -p /scout/.logs
RUN ln -s /scout/.config /go/src/github.com/jonoton/scout/.config && ln -s /scout/.logs /go/src/github.com/jonoton/scout/.logs
RUN go get -d -v ./... && go install -v ./...
CMD /go/bin/scout
